# Written and placed in public domain by Jeffrey Walton.
# This patch fixes some issues with GNU SIP Witch.
--- common/voip.cpp
+++ common/voip.cpp
@@ -23,7 +23,7 @@
 
 static int family = AF_INET;
 
-#ifdef	EXOSIP_API4
+#ifdef	EXOSIP_API4
 
 bool voip::publish(voip::context_t ctx, const char *uri, const char *contact, const char *event, const char *duration, const char *type, const char *body)
 {
@@ -140,7 +140,16 @@
 
     *msg = NULL;
     eXosip_lock(ctx);
-    eXosip_call_build_prack(ctx, tid, msg);
+
+    // TODO: verify this change to fix compile error
+    // eXosip_call_build_prack(ctx, tid, msg);
+    osip_message_t resp;  // unused
+    eXosip_call_build_prack(ctx, tid, &resp, msg);
+
+    // TODO: verify this change to fix compile error
+    int code = osip_message_get_status_code(&resp);
+    osip_message_free(&resp);
+
     if(!*msg) {
         eXosip_unlock(ctx);
         return false;
@@ -359,7 +368,7 @@
 void voip::send_registry_request(context_t c, reg_t r, msg_t msg) 
 {
     if(!msg)
-	    return;
+        return;
     eXosip_register_send_register(c, r, msg);
     eXosip_unlock(c);
 }
@@ -417,7 +426,7 @@
     port = port & 0xfffe;
     if(tls) {
         tlsmode = 1;
-        ++port;	// tls always next odd port...
+        ++port;    // tls always next odd port...
     }
 
     if(eXosip_listen_addr(ctx, proto, addr, port, family, tlsmode))
@@ -438,7 +447,15 @@
 
 #ifdef  AF_INET6
     if(family == AF_INET6)
+    {
+#ifdef HAVE_EXOSIP_ENABLE_IPV6
+        // eXosip_enable_ipv6 deprecated in 2013 at commit ff8d5b5c073d.
         eXosip_enable_ipv6(1);
+#else
+        int val = 1;
+        eXosip_set_option(*ctx, EXOSIP_OPT_ENABLE_IPV6, &val);
+#endif
+    }
 #endif
 }
 
@@ -844,7 +861,7 @@
     port = port & 0xfffe;
     if(tls) {
         tlsmode = 1;
-        ++port;	// tls always next odd port...
+        ++port;    // tls always next odd port...
     }
 
     if(eXosip_listen_addr(proto, addr, port, family, tlsmode))
@@ -870,7 +887,15 @@
 
 #ifdef  AF_INET6
     if(family == AF_INET6)
+    {
+#ifdef HAVE_EXOSIP_ENABLE_IPV6
+        // eXosip_enable_ipv6 deprecated in 2013 at commit ff8d5b5c073d.
         eXosip_enable_ipv6(1);
+#else
+        int val = 1;
+        eXosip_set_option(*ctx, EXOSIP_OPT_ENABLE_IPV6, &val);
+#endif
+    }
 #endif
 }
 
--- utils/sipquery.cpp
+++ utils/sipquery.cpp
@@ -224,9 +224,16 @@
     if(eXosip_init(EXOSIP_CONTEXT))
         shell::errexit(3, "*** sipuser: failed exosip init\n");
 
-#ifdef  AF_INET6
-    if(family == AF_INET6) {
+#ifdef  AF_INET6
+    if(family == AF_INET6)
+    {
+#ifdef HAVE_EXOSIP_ENABLE_IPV6
+        // eXosip_enable_ipv6 deprecated in 2013 at commit ff8d5b5c073d.
         eXosip_enable_ipv6(1);
+#else
+        int val = 1;
+        eXosip_set_option(context, EXOSIP_OPT_ENABLE_IPV6, &val);
+#endif
         if(binding == NULL)
             binding = "::0";
     }
--- server/stack.cpp
+++ server/stack.cpp
@@ -16,6 +16,11 @@
 
 #include "server.h"
 
+#ifdef  HAVE_TLS
+#include <eXosip2/eX_setup.h>
+extern "C" int eXosip_set_tls_ctx(eXosip_tls_ctx_t*);
+#endif
+
 namespace sipwitch {
 
 static volatile unsigned allocated_segments = 0;
@@ -774,7 +779,8 @@
     }
 
 #ifdef  HAVE_TLS
-    voip::create(&tls_context, agent, family);
+    // voip::create(&tls_context, agent, family);
+    voip::create(&tls_context, agent, sip_family);
 #endif
 
 #if defined(EXOSIP2_OPTION_SEND_101) && !defined(EXOSIP_API4)
